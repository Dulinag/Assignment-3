{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dulina\\\\Assignment-3\\\\src\\\\components\\\\Credits.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components'; // Keyframes for animation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url('your_background_image_url_here'); \n  background-size: cover;\n  background-position: center;\n  min-height: 100vh;\n`;\n_c = Container;\nconst Title = styled.h1`\n  font-size: 36px;\n  margin-bottom: 20px;\n  color: #333;\n  animation: ${fadeIn} 1s ease-in-out;\n`;\n_c2 = Title;\nconst StyledLink = styled(Link)`\n  font-size: 18px;\n  color: #007bff;\n  text-decoration: none;\n  margin-bottom: 10px;\n  animation: ${fadeIn} 1s ease-in-out;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n_c3 = StyledLink;\n\nclass Credits extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDescriptionChange = event => {\n      this.setState({\n        newCreditDescription: event.target.value\n      });\n    };\n\n    this.handleAmountChange = event => {\n      this.setState({\n        newCreditAmount: event.target.value\n      });\n    };\n\n    this.addCredit = () => {\n      const {\n        newCreditDescription,\n        newCreditAmount\n      } = this.state;\n\n      if (newCreditDescription && newCreditAmount) {\n        const newCredit = {\n          description: newCreditDescription,\n          amount: parseFloat(newCreditAmount)\n        };\n        const updatedCredits = [...this.state.credits, newCredit];\n        this.setState({\n          credits: updatedCredits,\n          newCreditDescription: '',\n          newCreditAmount: ''\n        }, () => {\n          // Pass updated credits array to parent component\n          this.props.onCreditAdded(updatedCredits);\n        });\n      }\n    };\n\n    this.state = {\n      credits: [],\n      newCreditDescription: '',\n      newCreditAmount: ''\n    };\n  } // Handle input change for new credit description\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Credits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: this.state.newCreditDescription,\n          onChange: this.handleDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount\",\n          value: this.state.newCreditAmount,\n          onChange: this.handleAmountChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addCredit,\n          children: \"Add Credit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n        to: \"/\",\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Credits;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"StyledLink\");","map":{"version":3,"sources":["C:/Users/dulina/Assignment-3/src/components/Credits.js"],"names":["React","Component","Link","styled","keyframes","fadeIn","Container","div","Title","h1","StyledLink","Credits","constructor","props","handleDescriptionChange","event","setState","newCreditDescription","target","value","handleAmountChange","newCreditAmount","addCredit","state","newCredit","description","amount","parseFloat","updatedCredits","credits","onCreditAdded","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n// Keyframes for animation\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-image: url('your_background_image_url_here'); \r\n  background-size: cover;\r\n  background-position: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 36px;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n  animation: ${fadeIn} 1s ease-in-out;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  font-size: 18px;\r\n  color: #007bff;\r\n  text-decoration: none;\r\n  margin-bottom: 10px;\r\n  animation: ${fadeIn} 1s ease-in-out;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nclass Credits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      credits: [],\r\n      newCreditDescription: '',\r\n      newCreditAmount: ''\r\n    };\r\n  }\r\n\r\n  // Handle input change for new credit description\r\n  handleDescriptionChange = (event) => {\r\n    this.setState({ newCreditDescription: event.target.value });\r\n  }\r\n\r\n  // Handle input change for new credit amount\r\n  handleAmountChange = (event) => {\r\n    this.setState({ newCreditAmount: event.target.value });\r\n  }\r\n\r\n  // Add new credit\r\n  addCredit = () => {\r\n    const { newCreditDescription, newCreditAmount } = this.state;\r\n    if (newCreditDescription && newCreditAmount) {\r\n      const newCredit = {\r\n        description: newCreditDescription,\r\n        amount: parseFloat(newCreditAmount)\r\n      };\r\n      const updatedCredits = [...this.state.credits, newCredit];\r\n      this.setState(\r\n        {\r\n          credits: updatedCredits,\r\n          newCreditDescription: '',\r\n          newCreditAmount: ''\r\n        },\r\n        () => {\r\n          // Pass updated credits array to parent component\r\n          this.props.onCreditAdded(updatedCredits);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Title>Credits</Title>\r\n        <div>\r\n          <input type=\"text\" placeholder=\"Description\" value={this.state.newCreditDescription} onChange={this.handleDescriptionChange} />\r\n          <input type=\"number\" placeholder=\"Amount\" value={this.state.newCreditAmount} onChange={this.handleAmountChange} />\r\n          <button onClick={this.addCredit}>Add Credit</button>\r\n        </div>\r\n        <StyledLink to=\"/\">Return to Home</StyledLink>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Credits;\r\n"]},"metadata":{},"sourceType":"module"}